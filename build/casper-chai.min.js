(function(){module.exports=function(t){var e,r,i,s,n,o,a,u;i=[];r=[];e=t.assert;n=function(e,r){return t.Assertion.addProperty(e,r)};s=function(e,r){return t.Assertion.addMethod(e,r)};o=function(t){var e;if(typeof t==="function"){e=t}else if(typeof t==="string"){if(/^\s*function\s+/.test(t)){e=t}else{if(t.indexOf("return ")===-1){e="function () { return "+t+" }"}else{e="function () { "+t+" }"}}}else{this.assert(false,"Expression "+t+" must be a function, or a string")}return e};u=function(t,e){var r;if(typeof t==="string"){r=new RegExp("^"+t+"$")}else if(t instanceof RegExp){r=t}else{throw new Error("Test received "+t+", but expected string",+" or regular expression.")}return r.test(e)};a=function(t,e){var r;r=function(t,e){var r;r=__utils__.findAll(t);return Array.prototype.map.call(r,function(t){return t.getAttribute(e)})};return casper.evaluate(r,{_selector:t,_attr:e})};s("attr",function(t){var r,i,s;s=this._obj;i=a(s,t);e.equal(i.length,1,"Expected "+s+" to have one match, but it had "+i.length);r=i[0];return this.assert(r,"Expected selector "+s+" to have attribute "+t+", but it did not","Expected selector "+s+" to not have attribute "+t+", "+("but it was "+r))});s("attrAny",function(t){var e,r;r=this._obj;e=a(r,t);return this.assert(e.some(function(t){return t}),"Expected one element matching selector "+r+" to have attribute"+(""+t+" set, but none did"),"Expected no elements matching selector "+r+" to have attribute"+(""+t+" set, but at least one did"))});s("attrAll",function(t){var e,r;r=this._obj;e=a(r,t);return this.assert(e.every(function(t){return t}),"Expected all elements matching selector "+r+" to have attribute"+(""+t+" set, but one did not have it"),"Expected one elements matching selector "+r+" to not have "+(" attribute "+t+" set, but they all had it"))});s("fieldValue",function(t){var e,r,i;i=this._obj;if(typeof i==="string"){}else{expect(i).to.be.inDOM}e=function(t){return __utils__.getFieldValue(t)};r=casper.evaluate(e,{selector:i});return this.assert(r===t,"expected field(s) "+i+" to have value "+t+", "+("but it was "+r),"expected field(s) "+i+" to not have value "+t+", "+"but it was")});n("inDOM",function(){var t;t=this._obj;return this.assert(casper.exists(t),"expected selector #{this} to be in the DOM, but it was not","expected selector #{this} to not be in the DOM, but it was")});n("loaded",function(){var t;t=this._obj;return this.assert(casper.resourceExists(t),"expected resource #{this} to exist, but it does not","expected resource #{this} to not exist, but it does")});s("matchOnRemote",function(t){var e,r,i;e=this._obj;r=o(e);i=casper.evaluate(r);if(typeof t!=="string"&&!(t instanceof RegExp)){if(toString.call(i)==="[object RuntimeArray]"){i=Array.prototype.slice.call(i)}this._obj=i;return this.eql(t,i)}else{return this.assert(u(t,i),"expected "+this._obj+" ("+r+" = "+i+") to match "+t,"expected "+this._obj+" ("+r+") to not match "+t+", but it did")}});n("matchTitle",function(){var t,e;t=this._obj;e=casper.getTitle();return this.assert(u(t,e),"expected title #{this} to match #{exp}, but it did not","expected title #{this} to not match #{exp}, but it did")});n("matchCurrentUrl",function(){var t,e;e=this._obj;t=casper.getCurrentUrl();return this.assert(u(e,t),"expected url #{exp} to match #{this}, but it did not","expected url #{exp} to not match #{this}, but it did")});s("tagName",function(t){var r,i,s;i=this._obj;if(typeof t==="string"){t=[t]}else if(!Array.isArray(t)){e.ok(false,"tagName must be a string or list, it was "+typeof t)}s=casper.evaluate(function(t){var e;e=__utils__.findAll(t);return Array.prototype.map.call(e,function(t){return t.tagName.toLowerCase()})},i);r=s.filter(function(e){return t.indexOf(e)<0});return this.assert(r.length===0,"Expected "+i+" to have only tags ["+t+"], but there was "+("also tag(s) ["+r+"]"),"Expected "+i+" to have tags other than ["+t+"], but "+"those were the only tags that appeared")});n("textInDOM",function(){var t,e;e=this._obj;t=casper.evaluate(function(){return document.body.textContent||document.body.innerText});return this.assert(t.indexOf(e)!==-1,"expected text #{this} to be in the document, but it was not","expected text #{this} to not be in the document, but it was found")});s("textMatch",function(t){var e,r;e=this._obj;r=casper.fetchText(e);return this.assert(u(t,r),"expected '"+e+"' to match "+t+', but it was "'+r+'"',"expected '"+e+"' to not match "+t+", but it did")});n("trueOnRemote",function(){var t,e,r;t=this._obj;e=o(t);r=casper.evaluate(e);return this.assert(r,"expected expression "+this._obj+" to be true, but it was "+r,"expected expression "+this._obj+" to not be true, but itw as "+r)});return n("visible",function(){var t;t=this._obj;expect(t).to.be.inDOM;return this.assert(casper.visible(t),"expected selector #{this} to be visible, but it was not","expected selector #{this} to not be visible, but it was")})}}).call(this);